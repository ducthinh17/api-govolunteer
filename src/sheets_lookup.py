import os
from google.oauth2 import service_account
from googleapiclient.discovery import build
from googleapiclient.errors import HttpError

# --- C·∫§U H√åNH ---
SERVICE_ACCOUNT_FILE = 'credentials.json' 
SCOPES = ['https://www.googleapis.com/auth/spreadsheets.readonly']

ACTIVITY_SHEET_ID = '1BCJbZqR98jjjqCJq1B2I5p_GuyGi6xwmgxKsRhvxdh0'
CERTIFICATE_SHEET_ID = '17wUDyxg3QyaEwcVyT2bRuhvaVk5IqS40HmZMpSFYY6s'
SHEET_NAME = 'Sheet1'

# --- KH·ªûI T·∫†O K·∫æT N·ªêI ---
sheet_api = None
try:
    if os.path.exists(SERVICE_ACCOUNT_FILE):
        creds = service_account.Credentials.from_service_account_file(
            SERVICE_ACCOUNT_FILE, scopes=SCOPES)
        service = build('sheets', 'v4', credentials=creds)
        sheet_api = service.spreadsheets()
        print("‚úÖ K·∫øt n·ªëi ƒë·∫øn Google Sheets API th√†nh c√¥ng.")
    else:
        print(f"‚ùå L·ªñI QUAN TR·ªåNG: File credentials '{SERVICE_ACCOUNT_FILE}' kh√¥ng ƒë∆∞·ª£c t√¨m th·∫•y.")
except Exception as e:
    print(f"‚ùå L·ªñI KH·ªûI T·∫†O D·ªäCH V·ª§ GOOGLE: {e}")


def _search_sheet_for_all_records(spreadsheet_id: str, record_type: str, full_name: str, citizen_id: str):
    """
    H√†m n·ªôi b·ªô ƒëa nƒÉng ƒë·ªÉ t√¨m t·∫•t c·∫£ c√°c d√≤ng kh·ªõp v·ªõi ng∆∞·ªùi d√πng trong m·ªôt sheet c·ª• th·ªÉ.
    """
    print(f"\n--- üïµÔ∏è  B·∫Øt ƒë·∫ßu t√¨m ki·∫øm Sheet: {record_type.upper()} ---")
    if not sheet_api:
        print("    -> ‚ùå L·ªói: D·ªãch v·ª• Google Sheets kh√¥ng kh·∫£ d·ª•ng.")
        return {"error": "D·ªãch v·ª• Google Sheets kh√¥ng kh·∫£ d·ª•ng."}

    try:
        result = sheet_api.values().get(spreadsheetId=spreadsheet_id, range=SHEET_NAME).execute()
        values = result.get('values', [])
        
        if not values or len(values) < 2:
            print("    -> ‚ö†Ô∏è C·∫£nh b√°o: Sheet tr·ªëng ho·∫∑c ch·ªâ c√≥ h√†ng ti√™u ƒë·ªÅ.")
            return []

        print(f"    -> ƒê√£ l·∫•y ƒë∆∞·ª£c {len(values)} h√†ng t·ª´ Sheet.")
        headers = values[0]
        print(f"    -> Ti√™u ƒë·ªÅ c·ªßa Sheet: {headers}")

        try:
            name_index = headers.index('User_Name')
            cccd_index = headers.index('CCCD')
            print(f"    -> C·ªôt 'User_Name' ·ªü v·ªã tr√≠ {name_index}, 'CCCD' ·ªü v·ªã tr√≠ {cccd_index}.")
        except ValueError as e:
            error_msg = f"Sheet {record_type} (ID: {spreadsheet_id}) thi·∫øu c·ªôt ti√™u ƒë·ªÅ b·∫Øt bu·ªôc: {e}."
            print(f"    -> ‚ùå L·ªói: {error_msg}")
            return {"error": error_msg}

        found_records = []
        for i, row in enumerate(values[1:], 1): # B·∫Øt ƒë·∫ßu t·ª´ h√†ng 1 (sau header)
            if len(row) > max(name_index, cccd_index):
                user_name_in_sheet = row[name_index].strip()
                cccd_in_sheet = row[cccd_index].strip()
                
                if user_name_in_sheet.lower() == full_name.strip().lower() and cccd_in_sheet == citizen_id.strip():
                    print(f"    -> ‚úÖ T√åM TH·∫§Y K·∫æT QU·∫¢ KH·ªöP t·∫°i h√†ng {i+1} cho ng∆∞·ªùi d√πng '{full_name}'.")
                    record = {headers[j]: (row[j] if j < len(row) else '') for j in range(len(headers))}
                    record['record_type'] = record_type
                    found_records.append(record)
        
        print(f"--- üèÅ K·∫øt th√∫c t√¨m ki·∫øm Sheet {record_type.upper()}. T√¨m th·∫•y t·ªïng c·ªông {len(found_records)} b·∫£n ghi. ---")
        return found_records
        
    except HttpError as e:
        error_msg = f"Kh√¥ng th·ªÉ truy c·∫≠p Google Sheet. M√£ l·ªói: {e.resp.status}. Chi ti·∫øt: {e.content}"
        print(f"    -> ‚ùå L·ªói HTTP: {error_msg}")
        return {"error": error_msg}
    except Exception as e:
        error_msg = f"L·ªói kh√¥ng x√°c ƒë·ªãnh khi x·ª≠ l√Ω sheet: {e}"
        print(f"    -> ‚ùå L·ªói kh√¥ng x√°c ƒë·ªãnh: {error_msg}")
        return {"error": error_msg}

def find_volunteer_info(full_name: str, citizen_id: str):
    """
    T√¨m ki·∫øm tr√™n c·∫£ hai sheet v√† g·ªôp k·∫øt qu·∫£.
    """
    # T√¨m ki·∫øm trong sheet ho·∫°t ƒë·ªông
    activity_results = _search_sheet_for_all_records(ACTIVITY_SHEET_ID, 'activity', full_name, citizen_id)
    if isinstance(activity_results, dict) and 'error' in activity_results:
        return activity_results

    # T√¨m ki·∫øm trong sheet ch·ª©ng nh·∫≠n
    certificate_results = _search_sheet_for_all_records(CERTIFICATE_SHEET_ID, 'certificate', full_name, citizen_id)
    if isinstance(certificate_results, dict) and 'error' in certificate_results:
        return certificate_results

    # G·ªôp hai danh s√°ch k·∫øt qu·∫£
    all_records = activity_results + certificate_results
    print(f"\n--- üîÄ  G·ªòP K·∫æT QU·∫¢ ---")
    print(f"    -> Ho·∫°t ƒë·ªông: {len(activity_results)} | Ch·ª©ng nh·∫≠n: {len(certificate_results)}")
    print(f"    -> T·ªïng c·ªông: {len(all_records)} b·∫£n ghi.")
    return all_records