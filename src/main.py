# src/main.py
import time
from fastapi import FastAPI, HTTPException
from fastapi.middleware.cors import CORSMiddleware

# ƒê·ªïi t√™n c√°c h√†m import ƒë·ªÉ m√£ ngu·ªìn r√µ r√†ng h∆°n
from scraper import scrape_news as fetch_news_from_source
from scraper import scrape_article_content as fetch_article_from_source
from scraper import BASE_URL # Import BASE_URL ƒë·ªÉ s·ª≠ d·ª•ng trong validation

# --- Kh·ªüi t·∫°o ·ª©ng d·ª•ng FastAPI ---
app = FastAPI(
    title="GoVolunteer Scraper API",
    description="API chuy√™n nghi·ªáp ƒë·ªÉ l·∫•y d·ªØ li·ªáu t·ª´ GoVolunteerHCMC, c√≥ h·ªó tr·ª£ caching v√† x·ª≠ l√Ω l·ªói chi ti·∫øt.",
    version="3.1.0", 
)

# --- C·∫•u h√¨nh CORS (Cross-Origin Resource Sharing) ---
# Cho ph√©p ·ª©ng d·ª•ng frontend c·ªßa b·∫°n (ch·∫°y ·ªü domain kh√°c) c√≥ th·ªÉ g·ªçi API n√†y
app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"], # Trong m√¥i tr∆∞·ªùng production, b·∫°n n√™n gi·ªõi h·∫°n l·∫°i, v√≠ d·ª•: ["https://your-app.zalo.me"]
    allow_credentials=True,
    allow_methods=["GET"], # Ch·ªâ cho ph√©p ph∆∞∆°ng th·ª©c GET
    allow_headers=["*"],
)

# --- C∆° ch·∫ø Caching ---
# L∆∞u tr·ªØ d·ªØ li·ªáu v√†o b·ªô nh·ªõ ƒë·ªÉ gi·∫£m thi·ªÉu s·ªë l·∫ßn ph·∫£i scrape l·∫°i trang web
cache = { "news_data": None, "last_fetched": 0 }
CACHE_DURATION_SECONDS = 1800 # Cache trong 30 ph√∫t

# --- ƒê·ªãnh nghƒ©a c√°c API Endpoints ---

@app.get("/", summary="Ki·ªÉm tra tr·∫°ng th√°i API")
def read_root():
    """
    Endpoint g·ªëc, d√πng ƒë·ªÉ ki·ªÉm tra xem API c√≥ ƒëang ho·∫°t ƒë·ªông hay kh√¥ng.
    C√°c d·ªãch v·ª• hosting nh∆∞ Render c≈©ng c√≥ th·ªÉ d√πng ƒë∆∞·ªùng d·∫´n n√†y ƒë·ªÉ health check.
    """
    return {"status": "online", "message": "Ch√†o m·ª´ng ƒë·∫øn v·ªõi API GoVolunteer!"}

@app.get("/news", summary="L·∫•y danh s√°ch t·∫•t c·∫£ tin t·ª©c (c√≥ cache)")
def get_all_news():
    """
    L·∫•y danh s√°ch t·∫•t c·∫£ c√°c m·ª•c v√† b√†i vi·∫øt t·ª´ trang ch·ªß.
    D·ªØ li·ªáu s·∫Ω ƒë∆∞·ª£c cache trong 30 ph√∫t ƒë·ªÉ c·∫£i thi·ªán hi·ªáu nƒÉng.
    """
    current_time = time.time()
    
    # 1. Ki·ªÉm tra cache tr∆∞·ªõc
    if cache["news_data"] and (current_time - cache["last_fetched"] < CACHE_DURATION_SECONDS):
        print("‚úÖ Tr·∫£ v·ªÅ d·ªØ li·ªáu t·ª´ cache.")
        return cache["news_data"]
    
    # 2. N·∫øu cache kh√¥ng h·ª£p l·ªá, ti·∫øn h√†nh scrape
    print("‚ôªÔ∏è Cache ƒë√£ h·∫øt h·∫°n. B·∫Øt ƒë·∫ßu scrape d·ªØ li·ªáu m·ªõi t·ª´ trang ch·ªß...")
    data = fetch_news_from_source()
    
    # 3. X·ª≠ l√Ω tr∆∞·ªùng h·ª£p scrape th·∫•t b·∫°i
    if not data:
        # Tr·∫£ v·ªÅ l·ªói 503 (Service Unavailable) ƒë·ªÉ cho bi·∫øt l·ªói kh√¥ng ph·∫£i do server API
        # m√† do d·ªãch v·ª• b√™n ngo√†i (trang GoVolunteer) kh√¥ng ph·∫£n h·ªìi.
        raise HTTPException(
            status_code=503, 
            detail="Kh√¥ng th·ªÉ l·∫•y d·ªØ li·ªáu t·ª´ trang ch·ªß GoVolunteer. Trang web c√≥ th·ªÉ ƒëang b·∫≠n ho·∫∑c kh√¥ng ph·∫£n h·ªìi."
        )
    
    # 4. C·∫≠p nh·∫≠t cache v·ªõi d·ªØ li·ªáu m·ªõi
    cache["news_data"] = data
    cache["last_fetched"] = current_time
    print("üíæ ƒê√£ c·∫≠p nh·∫≠t cache v·ªõi d·ªØ li·ªáu m·ªõi.")
    
    return data

@app.get("/article", summary="L·∫•y n·ªôi dung chi ti·∫øt c·ªßa m·ªôt b√†i vi·∫øt")
def get_article_detail(url: str):
    """
    L·∫•y n·ªôi dung HTML c·ªßa m·ªôt b√†i vi·∫øt c·ª• th·ªÉ d·ª±a tr√™n URL ƒë∆∞·ª£c cung c·∫•p.
    Endpoint n√†y kh√¥ng ƒë∆∞·ª£c cache v√¨ m·ªói URL l√† m·ªôt y√™u c·∫ßu ri√™ng bi·ªát.
    """
    # 1. Ki·ªÉm tra t√≠nh h·ª£p l·ªá c·ªßa tham s·ªë ƒë·∫ßu v√†o
    if not url or not url.startswith(BASE_URL):
        # Tr·∫£ v·ªÅ l·ªói 400 (Bad Request) n·∫øu URL kh√¥ng h·ª£p l·ªá
        raise HTTPException(status_code=400, detail=f"URL kh√¥ng h·ª£p l·ªá. URL ph·∫£i l√† m·ªôt chu·ªói v√† b·∫Øt ƒë·∫ßu b·∫±ng '{BASE_URL}'.")
    
    # 2. G·ªçi h√†m ƒë·ªÉ scrape n·ªôi dung
    content = fetch_article_from_source(url)
    
    # 3. X·ª≠ l√Ω tr∆∞·ªùng h·ª£p scrape th·∫•t b·∫°i (r·∫•t quan tr·ªçng)
    if content is None:
        # Tr·∫£ v·ªÅ l·ªói 503 ƒë·ªÉ b√°o cho frontend bi·∫øt server ƒë√£ c·ªë g·∫Øng nh∆∞ng th·∫•t b·∫°i
        raise HTTPException(
            status_code=503, 
            detail="Server ƒë√£ g·∫∑p l·ªói khi c·ªë g·∫Øng l·∫•y n·ªôi dung b√†i vi·∫øt. Nguy√™n nh√¢n c√≥ th·ªÉ do h·∫øt th·ªùi gian ch·ªù ho·∫∑c kh√¥ng t√¨m th·∫•y n·ªôi dung tr√™n trang."
        )
        
    # 4. Tr·∫£ v·ªÅ n·ªôi dung n·∫øu th√†nh c√¥ng
    return {"html_content": content}

